Directory structure:
└── tada201-wed101c-2.git/
    ├── eslint.config.js
    ├── index.html
    ├── package.json
    ├── tailwind.config.js
    ├── vite.config.js
    └── src/
        ├── App.css
        ├── App.jsx
        ├── index.css
        ├── main.jsx
        ├── components/
        │   └── Navbar.jsx
        ├── data/
        │   ├── aboutContent.json
        │   ├── images.json
        │   └── infoContent.json
        └── pages/
            ├── About.jsx
            ├── Home.jsx
            ├── ImageGallery.jsx
            └── Info.jsx

================================================
FILE: eslint.config.js
================================================
import js from '@eslint/js'
import globals from 'globals'
import reactHooks from 'eslint-plugin-react-hooks'
import reactRefresh from 'eslint-plugin-react-refresh'
import { defineConfig, globalIgnores } from 'eslint/config'

export default defineConfig([
  globalIgnores(['dist']),
  {
    files: ['**/*.{js,jsx}'],
    extends: [
      js.configs.recommended,
      reactHooks.configs['recommended-latest'],
      reactRefresh.configs.vite,
    ],
    languageOptions: {
      ecmaVersion: 2020,
      globals: globals.browser,
      parserOptions: {
        ecmaVersion: 'latest',
        ecmaFeatures: { jsx: true },
        sourceType: 'module',
      },
    },
    rules: {
      'no-unused-vars': ['error', { varsIgnorePattern: '^[A-Z_]' }],
    },
  },
])



================================================
FILE: index.html
================================================
<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href="/vite.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Vite + React</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>



================================================
FILE: package.json
================================================
{
  "name": "cool-gork-app",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "vite build",
    "lint": "eslint .",
    "preview": "vite preview"
  },
  "dependencies": {
    "framer-motion": "^12.23.6",
    "react": "^19.1.0",
    "react-dom": "^19.1.0",
    "react-router-dom": "^7.7.0"
  },
  "devDependencies": {
    "@eslint/js": "^9.30.1",
    "@types/react": "^19.1.8",
    "@types/react-dom": "^19.1.6",
    "@vitejs/plugin-react": "^4.6.0",
    "eslint": "^9.30.1",
    "eslint-plugin-react-hooks": "^5.2.0",
    "eslint-plugin-react-refresh": "^0.4.20",
    "globals": "^16.3.0",
    "vite": "^7.0.4"
  }
}



================================================
FILE: tailwind.config.js
================================================
/** @type {import('tailwindcss').Config} */
module.exports = {
  darkMode: 'class', // Enable class-based dark mode
  content: [
    "./index.html",
    "./src/**/*.{js,jsx,ts,tsx}"
  ],
  theme: {
    extend: {
      colors: {
        apertureOrange: '#FF6600',
        apertureTeal: '#00B3B3',
        apertureGray: {
          light: '#E0E0E0',
          DEFAULT: '#4B4B4B',
          dark: '#1A1A1A',
        },
      },
      fontFamily: {
        sans: ['"Segoe UI"', 'Roboto', 'Helvetica', 'Arial', 'sans-serif'],
        portal: ['"Orbitron"', 'sans-serif'], // futuristic font for Portal theme
      },
    },
  },
  plugins: [],
}



================================================
FILE: vite.config.js
================================================
import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vite.dev/config/
export default defineConfig({
  plugins: [react()],
})



================================================
FILE: src/App.css
================================================
#root {
  max-width: 1280px;
  margin: 0 auto;
  padding: 2rem;
  text-align: center;
}

.logo {
  height: 6em;
  padding: 1.5em;
  will-change: filter;
  transition: filter 300ms;
}
.logo:hover {
  filter: drop-shadow(0 0 2em #646cffaa);
}
.logo.react:hover {
  filter: drop-shadow(0 0 2em #61dafbaa);
}

@keyframes logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@media (prefers-reduced-motion: no-preference) {
  a:nth-of-type(2) .logo {
    animation: logo-spin infinite 20s linear;
  }
}

.card {
  padding: 2em;
}

.read-the-docs {
  color: #888;
}



================================================
FILE: src/App.jsx
================================================
import { BrowserRouter as Router, Routes, Route, useLocation } from "react-router-dom";
import { useState, useEffect } from "react";
import { AnimatePresence, motion } from "framer-motion";
import Navbar from "./components/Navbar";
import Home from "./pages/Home";
import About from "./pages/About";
import Info from "./pages/Info";
import ImageGallery from "./pages/ImageGallery";

function AnimatedRoutes() {
  const location = useLocation();

  return (
    <AnimatePresence mode="wait">
      <Routes location={location} key={location.pathname}>
        <Route
          path="/"
          element={
            <motion.div
              initial={{ opacity: 0, x: -50 }}
              animate={{ opacity: 1, x: 0 }}
              exit={{ opacity: 0, x: 50 }}
              transition={{ duration: 0.3 }}
            >
              <Home />
            </motion.div>
          }
        />
        <Route
          path="/about"
          element={
            <motion.div
              initial={{ opacity: 0, x: -50 }}
              animate={{ opacity: 1, x: 0 }}
              exit={{ opacity: 0, x: 50 }}
              transition={{ duration: 0.3 }}
            >
              <About />
            </motion.div>
          }
        />
        <Route
          path="/info"
          element={
            <motion.div
              initial={{ opacity: 0, x: -50 }}
              animate={{ opacity: 1, x: 0 }}
              exit={{ opacity: 0, x: 50 }}
              transition={{ duration: 0.3 }}
            >
              <Info />
            </motion.div>
          }
        />
        <Route
          path="/images"
          element={
            <motion.div
              initial={{ opacity: 0, x: -50 }}
              animate={{ opacity: 1, x: 0 }}
              exit={{ opacity: 0, x: 50 }}
              transition={{ duration: 0.3 }}
            >
              <ImageGallery />
            </motion.div>
          }
        />
      </Routes>
    </AnimatePresence>
  );
}

export default function App() {
  const [darkMode, setDarkMode] = useState(() => {
    const saved = localStorage.getItem("darkMode");
    return saved ? JSON.parse(saved) : false;
  });

  useEffect(() => {
    if (darkMode) {
      document.documentElement.classList.add("dark");
    } else {
      document.documentElement.classList.remove("dark");
    }
    localStorage.setItem("darkMode", JSON.stringify(darkMode));
  }, [darkMode]);

  const toggleDarkMode = () => setDarkMode(!darkMode);

  return (
    <Router>
      <div className="min-h-screen bg-apertureGray-light dark:bg-apertureGray-dark text-apertureGray-dark dark:text-apertureGray-light transition-colors duration-500">
        <Navbar darkMode={darkMode} toggleDarkMode={toggleDarkMode} />
        <main className="pt-20 container mx-auto px-4">
          <AnimatedRoutes />
        </main>
      </div>
    </Router>
  );
}



================================================
FILE: src/index.css
================================================
@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  font-family: system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;

  color-scheme: light dark;
  color: rgba(255, 255, 255, 0.87);
  background-color: #242424;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

a {
  font-weight: 500;
  color: #646cff;
  text-decoration: inherit;
}
a:hover {
  color: #535bf2;
}

body {
  margin: 0;
  display: flex;
  place-items: center;
  min-width: 320px;
  min-height: 100vh;
}

h1 {
  font-size: 3.2em;
  line-height: 1.1;
}

button {
  border-radius: 8px;
  border: 1px solid transparent;
  padding: 0.6em 1.2em;
  font-size: 1em;
  font-weight: 500;
  font-family: inherit;
  background-color: #1a1a1a;
  cursor: pointer;
  transition: border-color 0.25s;
}
button:hover {
  border-color: #646cff;
}
button:focus,
button:focus-visible {
  outline: 4px auto -webkit-focus-ring-color;
}

@media (prefers-color-scheme: light) {
  :root {
    color: #213547;
    background-color: #ffffff;
  }
  a:hover {
    color: #747bff;
  }
  button {
    background-color: #f9f9f9;
  }
}



================================================
FILE: src/main.jsx
================================================
import { StrictMode } from 'react'
import { createRoot } from 'react-dom/client'
import './index.css'
import App from './App.jsx'

createRoot(document.getElementById('root')).render(
  <StrictMode>
    <App />
  </StrictMode>,
)



================================================
FILE: src/components/Navbar.jsx
================================================
import { NavLink } from "react-router-dom";
import { useState } from "react";

export default function Navbar({ darkMode, toggleDarkMode }) {
  const [showGladosQuote, setShowGladosQuote] = useState(false);

  const handleLoginClick = () => {
    setShowGladosQuote(true);
    setTimeout(() => setShowGladosQuote(false), 5000);
  };

  return (
    <>
      <nav className="fixed top-0 w-full bg-black bg-opacity-70 shadow-md border-b border-gray-700 z-50">
        <div className="container mx-auto flex items-center justify-between p-4">
          <NavLink to="/" className="flex items-center">
            <img
              src="/Aperture-Science-Logo.png"
              alt="Aperture Science Logo"
              className="h-10 w-auto"
            />
          </NavLink>
          <ul className="hidden md:flex space-x-6 text-gray-300 font-semibold">
            <li>
              <NavLink
                to="/"
                className={({ isActive }) =>
                  isActive ? "text-apertureOrange" : "hover:text-apertureOrange"
                }
              >
                Home
              </NavLink>
            </li>
            <li>
              <NavLink
                to="/about"
                className={({ isActive }) =>
                  isActive ? "text-apertureOrange" : "hover:text-apertureOrange"
                }
              >
                About
              </NavLink>
            </li>
            <li>
              <NavLink
                to="/images"
                className={({ isActive }) =>
                  isActive ? "text-apertureOrange" : "hover:text-apertureOrange"
                }
              >
                Image Library
              </NavLink>
            </li>
            <li>
              <NavLink
                to="/info"
                className={({ isActive }) =>
                  isActive ? "text-apertureOrange" : "hover:text-apertureOrange"
                }
              >
                Info
              </NavLink>
            </li>
          </ul>
          <div className="flex items-center space-x-4">
            <button
              onClick={toggleDarkMode}
              className="bg-apertureOrange text-white px-4 py-2 rounded shadow-lg hover:bg-orange-600 focus:outline-none"
              aria-label="Toggle Dark Mode"
            >
              {darkMode ? "Light Mode" : "Dark Mode"}
            </button>
            <button
              onClick={handleLoginClick}
              className="bg-apertureTeal text-white px-4 py-2 rounded shadow-lg hover:bg-teal-600 focus:outline-none"
              aria-label="Mock Login"
            >
              Mock Login
            </button>
          </div>
        </div>
      </nav>
      {showGladosQuote && (
        <div className="fixed bottom-20 right-4 bg-black bg-opacity-80 text-apertureOrange p-4 rounded shadow-lg max-w-xs z-50">
          <p>
            "Welcome, test subject. Remember, the cake is a lie."
          </p>
        </div>
      )}
    </>
  );
}



================================================
FILE: src/data/aboutContent.json
================================================
{
  "title": "About Aperture Science",
  "paragraphs": [
    "Founded by Cave Johnson, Aperture Science is a leading scientific research organization known for its groundbreaking, albeit often dangerous, experiments. Our mission is to push the boundaries of science, for the good of all mankind... and perhaps a few test subjects.",
    "From advanced portal technology to sentient AI, Aperture Science has been at the forefront of innovation since its inception in 1947. We believe in rigorous testing, even if it means a few explosions along the way.",
    "Our facilities, located deep within the Upper Michigan Peninsula, are equipped with state-of-the-art laboratories and an endless supply of enthusiasm. We are constantly seeking new challenges and new ways to expand the horizons of scientific understanding."
  ]
}



================================================
FILE: src/data/images.json
================================================
[
  {
    "src": "/src/assets/image1.jpg",
    "alt": "Lab Experiment",
    "caption": "A typical day in the lab."
  },
  {
    "src": "/src/assets/image2.jpg",
    "alt": "Portal Gun",
    "caption": "The device that changed everything."
  },
  {
    "src": "/src/assets/image3.jpg",
    "alt": "GLaDOS",
    "caption": "Our beloved AI companion."
  },
  {
    "src": "/src/assets/image4.jpg",
    "alt": "Test Chamber",
    "caption": "Another test chamber completed."
  },
  {
    "src": "/src/assets/image5.jpg",
    "alt": "Companion Cube",
    "caption": "Your best friend, forever."
  },
  {
    "src": "/src/assets/image6.jpg",
    "alt": "Turret",
    "caption": "Hello, friend."
  }
]



================================================
FILE: src/data/infoContent.json
================================================
{
  "title": "Important Information",
  "intro": "Welcome to the information hub of Aperture Science. Here you can find details about our ongoing research, safety protocols, and career opportunities.",
  "sections": [
    {
      "heading": "Research & Development",
      "content": "Our R&D department is constantly pushing the boundaries of science. Current projects include advanced AI ethics, interdimensional travel, and the development of new, more efficient testing apparatuses."
    },
    {
      "heading": "Safety Protocols",
      "content": "At Aperture Science, safety is our number one priority. All personnel are required to adhere to strict safety guidelines, including proper handling of hazardous materials, mandatory emergency drills, and regular psychological evaluations. Please report any anomalies immediately."
    },
    {
      "heading": "Career Opportunities",
      "content": "Are you a highly motivated individual with a passion for science and a disregard for personal safety? Aperture Science is always looking for talented scientists, engineers, and test subjects. Visit our contact page to inquire about openings."
    }
  ]
}



================================================
FILE: src/pages/About.jsx
================================================
import aboutContent from '../data/aboutContent.json';

export default function About() {
  return (
    <div className="max-w-4xl mx-auto py-8">
      <h1 className="text-3xl font-portal font-bold mb-6">{aboutContent.title}</h1>
      {aboutContent.paragraphs.map((para, idx) => (
        <p key={idx} className="mb-4 leading-relaxed text-lg">
          {para}
        </p>
      ))}
    </div>
  );
}



================================================
FILE: src/pages/Home.jsx
================================================
import { useState } from 'react';
import { motion, AnimatePresence } from 'framer-motion';

const slides = [
  {
    image: '/Banner.jpg',
    title: 'Welcome to Aperture Science',
    description: 'Where science gets done — sometimes explosively.',
    buttonText: 'Enter the Facility',
    buttonLink: '#about-section',
  },
  {
    image: '/Banner2.jpg',
    title: 'Innovation at its Core',
    description: 'Pushing the boundaries of scientific discovery.',
    buttonText: 'Learn More',
    buttonLink: '#about-section',
  },
  {
    image: '/Banner3.jpg',
    title: 'Advanced Testing Facilities',
    description: 'Ensuring precision and reliability in every experiment.',
    buttonText: 'Explore Labs',
    buttonLink: '#about-section',
  },
];

export default function Home() {
  const [current, setCurrent] = useState(0);

  const nextSlide = () => {
    setCurrent((prev) => (prev + 1) % slides.length);
  };

  const prevSlide = () => {
    setCurrent((prev) => (prev - 1 + slides.length) % slides.length);
  };

  const setSlide = (index) => {
    setCurrent(index);
  };

  return (
    <div>
      <section className="relative overflow-hidden rounded-lg shadow-lg">
        <AnimatePresence initial={false}>
          <motion.div
            key={current}
            initial={{ opacity: 0, x: 100 }}
            animate={{ opacity: 1, x: 0 }}
            exit={{ opacity: 0, x: -100 }}
            transition={{ duration: 0.5 }}
            className="relative"
          >
            <img
              src={slides[current].image}
              alt={slides[current].title}
              className="w-full h-96 object-cover"
            />
            <div className="absolute inset-0 bg-black bg-opacity-50 flex flex-col justify-center items-center text-center text-white p-4">
              <h1 className="text-3xl font-portal mb-2">{slides[current].title}</h1>
              <p className="mb-4">{slides[current].description}</p>
              <a
                href={slides[current].buttonLink}
                className="bg-apertureOrange px-4 py-2 rounded hover:bg-orange-600 transition"
              >
                {slides[current].buttonText}
              </a>
            </div>
          </motion.div>
        </AnimatePresence>
        <button
          onClick={prevSlide}
          aria-label="Previous Slide"
          className="absolute top-1/2 left-4 transform -translate-y-1/2 bg-black bg-opacity-50 text-white rounded-full p-2 hover:bg-opacity-75"
        >
          &#10094;
        </button>
        <button
          onClick={nextSlide}
          aria-label="Next Slide"
          className="absolute top-1/2 right-4 transform -translate-y-1/2 bg-black bg-opacity-50 text-white rounded-full p-2 hover:bg-opacity-75"
        >
          &#10095;
        </button>
        <div className="flex justify-center mt-4 space-x-2">
          {slides.map((_, index) => (
            <button
              key={index}
              onClick={() => setSlide(index)}
              aria-label={`Go to slide ${index + 1}`}
              className={`w-3 h-3 rounded-full ${
                index === current ? 'bg-apertureOrange' : 'bg-gray-400'
              }`}
            />
          ))}
        </div>
      </section>

      <section id="about-section" className="mt-12 grid grid-cols-1 md:grid-cols-2 gap-8">
        <div>
          <h2 className="text-2xl font-semibold mb-4">About Aperture Science</h2>
          <p>
            Founded by Cave Johnson, Aperture Science is a leader in advanced testing environments and innovative technologies.
          </p>
        </div>
        <div className="bg-apertureGray-light dark:bg-apertureGray-dark p-6 rounded shadow">
          <h3 className="text-xl font-semibold mb-3">Company Stats</h3>
          <ul className="list-disc list-inside space-y-1">
            <li>Founded: 1947</li>
            <li>Employees: 327</li>
            <li>Location: Upper Michigan Peninsula</li>
            <li>Favorite Element: Molybdenum</li>
          </ul>
        </div>
      </section>
    </div>
  );
}



================================================
FILE: src/pages/ImageGallery.jsx
================================================
import { useState, useEffect } from 'react';
import imagesData from '../data/images.json';
import { motion, AnimatePresence } from 'framer-motion';

export default function ImageGallery() {
  const [filter, setFilter] = useState('');
  const [filteredImages, setFilteredImages] = useState(imagesData);
  const [modalOpen, setModalOpen] = useState(false);
  const [modalImage, setModalImage] = useState(null);

  useEffect(() => {
    const filtered = imagesData.filter(
      (img) =>
        img.alt.toLowerCase().includes(filter.toLowerCase()) ||
        img.caption.toLowerCase().includes(filter.toLowerCase())
    );
    setFilteredImages(filtered);
  }, [filter]);

  const openModal = (image) => {
    setModalImage(image);
    setModalOpen(true);
  };

  const closeModal = () => {
    setModalOpen(false);
    setModalImage(null);
  };

  return (
    <div className="max-w-5xl mx-auto py-8">
      <h1 className="text-3xl font-portal font-bold mb-6 text-center text-apertureOrange">Image Library</h1>
      <input
        type="text"
        placeholder="Search images..."
        className="w-full p-2 mb-6 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-apertureOrange"
        value={filter}
        onChange={(e) => setFilter(e.target.value)}
        aria-label="Search images"
      />
      <div className="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-4">
        {filteredImages.map((image, idx) => (
          <motion.div
            key={idx}
            className="cursor-pointer relative overflow-hidden rounded shadow-lg border border-gray-700"
            whileHover={{ scale: 1.05 }}
            onClick={() => openModal(image)}
            tabIndex={0}
            onKeyDown={(e) => {
              if (e.key === 'Enter') openModal(image);
            }}
            aria-label={`View image: ${image.alt}`}
          >
            <img
              src={image.src}
              alt={image.alt}
              className="w-full h-40 object-cover transition-transform duration-300"
              loading="lazy"
            />
            <div className="absolute bottom-0 left-0 right-0 bg-black bg-opacity-60 text-white text-sm p-1 truncate">
              {image.caption}
            </div>
          </motion.div>
        ))}
      </div>

      <AnimatePresence>
        {modalOpen && modalImage && (
          <motion.div
            className="fixed inset-0 bg-black bg-opacity-80 flex items-center justify-center z-50"
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            onClick={closeModal}
            role="dialog"
            aria-modal="true"
            aria-labelledby="modal-title"
          >
            <motion.img
              src={modalImage.src}
              alt={modalImage.alt}
              className="max-w-full max-h-full rounded shadow-lg"
              initial={{ scale: 0.8 }}
              animate={{ scale: 1 }}
              exit={{ scale: 0.8 }}
              onClick={(e) => e.stopPropagation()}
            />
            <motion.div
              className="absolute bottom-10 text-white text-center w-full px-4"
              initial={{ y: 20, opacity: 0 }}
              animate={{ y: 0, opacity: 1 }}
              exit={{ y: 20, opacity: 0 }}
              id="modal-title"
            >
              {modalImage.caption}
            </motion.div>
            <button
              onClick={closeModal}
              className="absolute top-4 right-4 text-white text-3xl font-bold focus:outline-none"
              aria-label="Close modal"
            >
              &times;
            </button>
          </motion.div>
        )}
      </AnimatePresence>
    </div>
  );
}



================================================
FILE: src/pages/Info.jsx
================================================
import infoContent from '../data/infoContent.json';

export default function Info() {
  return (
    <div className="max-w-4xl mx-auto py-8">
      <h1 className="text-3xl font-portal font-bold mb-6">{infoContent.title}</h1>
      <p className="mb-6 text-lg">{infoContent.intro}</p>
      {infoContent.sections.map((section, idx) => (
        <section key={idx} className="mb-6">
          <h2 className="text-2xl font-semibold mb-2">{section.heading}</h2>
          <p className="text-lg leading-relaxed">{section.content}</p>
        </section>
      ))}
    </div>
  );
}


